[0m[[0m[0mdebug[0m] [0m[0mAcquiring lock on file /Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/project/target/.sbt-compilation-infos/smt-cacheable-benchmark-compile/.sbt-idea-lock ...[0m
[0m[[0m[0minfo[0m] [0m[0m/Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/smt-cacheable-benchmark/src/main/scala/org/bitlap/cacheable/benchmark/CacheableBenchmarks.scala:65:4: [0m
[0m[[0m[0minfo[0m] [0m[0m###### Time: 2022-05-14T15:22:46.620314+08:00[Asia/Shanghai] Expanded macro start ######[0m
[0m[[0m[0minfo[0m] [0m[0m@new inline() def cacheableRedis(id: Int, key: String): ZIO[Any, Throwable, String] = {[0m
[0m[[0m[0minfo[0m] [0m[0m  val $result = ZIO.effect({[0m
[0m[[0m[0minfo[0m] [0m[0m    Try(Thread.sleep(5)).getOrElse(());[0m
[0m[[0m[0minfo[0m] [0m[0m    Random.nextInt().$plus("")[0m
[0m[[0m[0minfo[0m] [0m[0m  });[0m
[0m[[0m[0minfo[0m] [0m[0m  val $key = List("CacheableBenchmarks", "cacheableRedis");[0m
[0m[[0m[0minfo[0m] [0m[0m  import _root_.org.bitlap.cacheable.redis.Implicits._;[0m
[0m[[0m[0minfo[0m] [0m[0m  org.bitlap.cacheable.core.Cache($result)($key, scala.collection.immutable.List(id, key))[0m
[0m[[0m[0minfo[0m] [0m[0m}[0m
[0m[[0m[0minfo[0m] [0m[0m###### Expanded macro end ######[0m
[0m[[0m[0minfo[0m] [0m[0m  @cacheable(local = false) // use RedisExecutor.live, not RedisExecutor.local[0m
[0m[[0m[0minfo[0m] [0m[0m   ^[0m
[0m[[0m[0minfo[0m] [0m[0m/Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/smt-cacheable-benchmark/src/main/scala/org/bitlap/cacheable/benchmark/CacheableBenchmarks.scala:72:4: [0m
[0m[[0m[0minfo[0m] [0m[0m###### Time: 2022-05-14T15:22:46.632658+08:00[Asia/Shanghai] Expanded macro start ######[0m
[0m[[0m[0minfo[0m] [0m[0m@new inline() def cacheableCaffeine(id: Int, key: String): ZIO[Any, Throwable, String] = {[0m
[0m[[0m[0minfo[0m] [0m[0m  val $result = ZIO.effect({[0m
[0m[[0m[0minfo[0m] [0m[0m    Try(Thread.sleep(5)).getOrElse(());[0m
[0m[[0m[0minfo[0m] [0m[0m    Random.nextInt().$plus("")[0m
[0m[[0m[0minfo[0m] [0m[0m  });[0m
[0m[[0m[0minfo[0m] [0m[0m  val $key = List("CacheableBenchmarks", "cacheableCaffeine");[0m
[0m[[0m[0minfo[0m] [0m[0m  import _root_.org.bitlap.cacheable.caffeine.Implicits._;[0m
[0m[[0m[0minfo[0m] [0m[0m  org.bitlap.cacheable.core.Cache($result)($key, scala.collection.immutable.List(id, key))[0m
[0m[[0m[0minfo[0m] [0m[0m}[0m
[0m[[0m[0minfo[0m] [0m[0m###### Expanded macro end ######[0m
[0m[[0m[0minfo[0m] [0m[0m  @cacheable(local = true)[0m
[0m[[0m[0minfo[0m] [0m[0m   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/smt-cacheable-benchmark/src/main/scala/org/bitlap/cacheable/benchmark/CacheableBenchmarks.scala:79:27: parameter value id in method unCacheable is never used[0m
[0m[[0m[33mwarn[0m] [0m[0m  @inline def unCacheable(id: Int, key: String): ZIO[Any, Throwable, String] =[0m
[0m[[0m[33mwarn[0m] [0m[0m                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/smt-cacheable-benchmark/src/main/scala/org/bitlap/cacheable/benchmark/CacheableBenchmarks.scala:79:36: parameter value key in method unCacheable is never used[0m
[0m[[0m[33mwarn[0m] [0m[0m  @inline def unCacheable(id: Int, key: String): ZIO[Any, Throwable, String] =[0m
[0m[[0m[33mwarn[0m] [0m[0m                                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m6 deprecations (since 2.13.0); re-run with -deprecation for details[0m
[0m[[0m[33mwarn[0m] [0m[0mthree warnings found[0m
[0m[[0m[0mdebug[0m] [0m[0mReleasing lock on file /Users/icemimosa/Documents/github/AskMisa/scala-macro-tools/project/target/.sbt-compilation-infos/smt-cacheable-benchmark-compile/.sbt-idea-lock.[0m
